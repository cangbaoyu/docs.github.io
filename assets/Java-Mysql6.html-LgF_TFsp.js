import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,e as a,o as l}from"./app-qlBYsuIT.js";const n={};function t(d,e){return l(),s("div",null,e[0]||(e[0]=[a(`<h1 id="sql-优化之道" tabindex="-1"><a class="header-anchor" href="#sql-优化之道"><span>SQL 优化之道</span></a></h1><h2 id="一些常见的-sql-实践" tabindex="-1"><a class="header-anchor" href="#一些常见的-sql-实践"><span>一些常见的 SQL 实践</span></a></h2><ul><li>负向条件查询不能使用索引</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from order where status!=0 and status!=1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>not in/not exists # 都不是好习惯</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以优化为 <code>in</code> 查询：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from order where status in(2,3)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>前导模糊查询不能使用索引</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from order where desc like &#39;%XX&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>而非前导模糊查询则可以：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from order where desc like &#39;XX%&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>数据区分度不大的字段不宜使用索引</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from user where sex=1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>原因：性别只有男，女，每次过滤掉的数据很少，不宜使用索引。</p><p>经验上，能过滤80%数据时就可以使用索引。对于订单状态，如果状态值很少，不宜使用索引，如果状态值很多，能够过滤大量数据，则应该建立索引。</p><ul><li>在属性上进行计算不能命中索引</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from order where YEAR(date) &lt; = &#39;2017&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即使date上建立了索引，也会全表扫描，可优化为值计算：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from order where date &lt; = CURDATE()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from order where date &lt; = &#39;2017-01-01&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="并非周知的-sql-实践" tabindex="-1"><a class="header-anchor" href="#并非周知的-sql-实践"><span>并非周知的 SQL 实践</span></a></h2><ul><li>如果业务大部分是单条查询，使用Hash索引性能更好，例如用户中心</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from user where uid=?</span></span>
<span class="line"><span>select from user where login_name=?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>原因：<code>B-Tree</code> 索引的时间复杂度是 <code>O(log(n))</code>；<code>Hash</code> 索引的时间复杂度是 <code>O(1)</code></p><ul><li>允许为 <code>null</code> 的列，查询有潜在大坑 单列索引不存 <code>null</code> 值，复合索引不存全为 <code>null</code> 的值，如果列允许为 <code>null</code>，可能会得到“不符合预期”的结果集</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from user where name != &#39;shenjian&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果 <code>name</code> 允许为 <code>null</code>，索引不存储 <code>null</code> 值，结果集中不会包含这些记录。所以，请使用 <code>not null</code> 约束以及默认值。</p><ul><li>复合索引最左前缀，并不是值 SQL 语句的 <code>where</code> 顺序要和复合索引一致</li></ul><p>用户中心建立了(login_name, passwd)的复合索引</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from user where login_name=? and passwd=?</span></span>
<span class="line"><span>select from user where passwd=? and login_name=?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>都能够命中索引</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from user where login_name=?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>也能命中索引，满足复合索引最左前缀</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from user where passwd=?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>不能命中索引，不满足复合索引最左前缀</p><ul><li>使用 ENUM 而不是字符串 <code>ENUM</code> 保存的是 <code>TINYINT</code>，别在枚举中搞一些“中国”“北京”“技术部”这样的字符串，字符串空间又大，效率又低。</li></ul><h2 id="小众但有用的-sql-实践" tabindex="-1"><a class="header-anchor" href="#小众但有用的-sql-实践"><span>小众但有用的 SQL 实践</span></a></h2><p>如果明确知道只有一条结果返回，<code>limit 1</code> 能够提高效率</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from user where login_name=?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以优化为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from user where login_name=? limit 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>原因：你知道只有一条结果，但数据库并不知道，明确告诉它，让它主动停止游标移动</p><ul><li>把计算放到业务层而不是数据库层，除了节省数据的 CPU，还有意想不到的查询缓存优化效果</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from order where date &lt; = CURDATE()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这不是一个好的SQL实践，应该优化为：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$curDate = date(&#39;Y-m-d&#39;);</span></span>
<span class="line"><span>$res = mysqlquery(&#39;select from order where date &lt; = $curDate&#39;);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>原因：释放了数据库的 CPU，多次调用，传入的SQL相同，才可以利用查询缓存</p><ul><li>强制类型转换会全表扫描</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select from user where phone=13800001234</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>你以为会命中 phone 索引么？大错特错了，这个语句究竟要怎么改？</p><p>末了，再加一条，不要使用 <code>select *（潜台词，文章的 SQL 都不合格 ==）</code>，只返回需要的列，能够大大的节省数据传输量，与数据库的内存使用量哟。</p>`,52)]))}const c=i(n,[["render",t],["__file","Java-Mysql6.html.vue"]]),o=JSON.parse('{"path":"/audition/database/Java-Mysql6.html","title":"SQL 优化之道","lang":"zh-CN","frontmatter":{"description":"SQL 优化之道 一些常见的 SQL 实践 负向条件查询不能使用索引 可以优化为 in 查询： 前导模糊查询不能使用索引 而非前导模糊查询则可以： 数据区分度不大的字段不宜使用索引 原因：性别只有男，女，每次过滤掉的数据很少，不宜使用索引。 经验上，能过滤80%数据时就可以使用索引。对于订单状态，如果状态值很少，不宜使用索引，如果状态值很多，能够过滤大...","head":[["meta",{"property":"og:url","content":"https://www.sansei.top/audition/database/Java-Mysql6.html"}],["meta",{"property":"og:site_name","content":"川上富江"}],["meta",{"property":"og:title","content":"SQL 优化之道"}],["meta",{"property":"og:description","content":"SQL 优化之道 一些常见的 SQL 实践 负向条件查询不能使用索引 可以优化为 in 查询： 前导模糊查询不能使用索引 而非前导模糊查询则可以： 数据区分度不大的字段不宜使用索引 原因：性别只有男，女，每次过滤掉的数据很少，不宜使用索引。 经验上，能过滤80%数据时就可以使用索引。对于订单状态，如果状态值很少，不宜使用索引，如果状态值很多，能够过滤大..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-16T13:58:06.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-16T13:58:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SQL 优化之道\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-16T13:58:06.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一些常见的 SQL 实践","slug":"一些常见的-sql-实践","link":"#一些常见的-sql-实践","children":[]},{"level":2,"title":"并非周知的 SQL 实践","slug":"并非周知的-sql-实践","link":"#并非周知的-sql-实践","children":[]},{"level":2,"title":"小众但有用的 SQL 实践","slug":"小众但有用的-sql-实践","link":"#小众但有用的-sql-实践","children":[]}],"git":{"createdTime":1737035886000,"updatedTime":1737035886000,"contributors":[{"name":"cangbao","email":"yph0228@163.com","commits":1}]},"readingTime":{"minutes":2.87,"words":860},"filePathRelative":"audition/database/Java-Mysql6.md","localizedDate":"2025年1月16日","autoDesc":true}');export{c as comp,o as data};
