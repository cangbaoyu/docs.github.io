import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as i,o}from"./app-BasagXBN.js";const n={};function r(c,e){return o(),a("div",null,e[0]||(e[0]=[i('<h1 id="你如何考虑组件化" tabindex="-1"><a class="header-anchor" href="#你如何考虑组件化"><span>你如何考虑组件化</span></a></h1><h2 id="组件化与模块化" tabindex="-1"><a class="header-anchor" href="#组件化与模块化"><span>组件化与模块化</span></a></h2><p>首先来谈两个前端和移动端比较常见的词：<code>组件化</code> 和 <code>模块化</code></p><p>首先，可以肯定的是，组件化和模块化的中心思想都是 <code>分而治之</code>。目的都是将一个庞大的系统拆分成多个组件或者说是模块。</p><h2 id="组件化" tabindex="-1"><a class="header-anchor" href="#组件化"><span>组件化</span></a></h2><p>组件化就是基于可重用的目的，将一个大的软件系统按照分离关注点的形式，拆分成多个独立的组件，主要目的就是 <code>减少耦合</code>。</p><blockquote><p>一个独立的组件可以是一个软件包、WEB 服务、WEB 资源或者是封装了一些函数的模块。这样，独立出来的组件可以单独维护和升级而不会影响到其他的组件。</p></blockquote><h2 id="模块化" tabindex="-1"><a class="header-anchor" href="#模块化"><span>模块化</span></a></h2><p>模块化的目的在于将一个程序按照其功能做拆分，分成相互独立的模块，以便于每个模块只包含与其功能相关的内容，模块之间通过接口调用。将一个大的系统模块化之后，每个模块都可以被高度复用。</p><h2 id="模块化和组件化的区别" tabindex="-1"><a class="header-anchor" href="#模块化和组件化的区别"><span>模块化和组件化的区别</span></a></h2><p>从上面的定义中可以看出，组件化和模块化的意思差不多，主要思想都是分而治之。只是一个把拆分之后的每个片段叫做组件、另一个把拆分之后的片段叫做模块。那么这两种拆分在拆分方式上是不是有什么不同的？</p><p>关于组件化和模块化的区别，我在网上看了好多资料，也没有人能给出准确的回答。其实没有准确回答的原因也比较明显，那就是大多数时候我们真的不需要严格的区分这两个名字。我们要学习的是其中的解耦和分治的思想和目的。</p><p>从另外一个角度来讲，如果真的要区分一下组件化和模块化的话，那么可以认为这两种分而治之的目的稍有区别：</p><ul><li>模块化的目的是为了 <code>重用</code>，模块化后可以方便重复使用和插拨到不同的平台，不同的业务逻辑过程中。</li><li>组件化的目的是为了 <code>解耦</code>，把系统拆分成多个组件，分离组件边界和责任，便于独立升级和维护。</li></ul>',14)]))}const d=t(n,[["render",r]]),s=JSON.parse('{"path":"/audition/design/Java-Design-Ability2.html","title":"你如何考虑组件化","lang":"zh-CN","frontmatter":{"description":"你如何考虑组件化 组件化与模块化 首先来谈两个前端和移动端比较常见的词：组件化 和 模块化 首先，可以肯定的是，组件化和模块化的中心思想都是 分而治之。目的都是将一个庞大的系统拆分成多个组件或者说是模块。 组件化 组件化就是基于可重用的目的，将一个大的软件系统按照分离关注点的形式，拆分成多个独立的组件，主要目的就是 减少耦合。 一个独立的组件可以是一个...","head":[["meta",{"property":"og:url","content":"https://www.sansei.top/audition/design/Java-Design-Ability2.html"}],["meta",{"property":"og:site_name","content":"川上富江"}],["meta",{"property":"og:title","content":"你如何考虑组件化"}],["meta",{"property":"og:description","content":"你如何考虑组件化 组件化与模块化 首先来谈两个前端和移动端比较常见的词：组件化 和 模块化 首先，可以肯定的是，组件化和模块化的中心思想都是 分而治之。目的都是将一个庞大的系统拆分成多个组件或者说是模块。 组件化 组件化就是基于可重用的目的，将一个大的软件系统按照分离关注点的形式，拆分成多个独立的组件，主要目的就是 减少耦合。 一个独立的组件可以是一个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-05T15:37:17.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-05T15:37:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"你如何考虑组件化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-05T15:37:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"组件化与模块化","slug":"组件化与模块化","link":"#组件化与模块化","children":[]},{"level":2,"title":"组件化","slug":"组件化","link":"#组件化","children":[]},{"level":2,"title":"模块化","slug":"模块化","link":"#模块化","children":[]},{"level":2,"title":"模块化和组件化的区别","slug":"模块化和组件化的区别","link":"#模块化和组件化的区别","children":[]}],"git":{"createdTime":1754408237000,"updatedTime":1754408237000,"contributors":[{"name":"cangbao","email":"yph0228@163.com","commits":1}]},"readingTime":{"minutes":2.06,"words":618},"filePathRelative":"audition/design/Java-Design-Ability2.md","localizedDate":"2025年8月5日","autoDesc":true}');export{d as comp,s as data};
