import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as t,o as r}from"./app-CPaQbjzT.js";const n={};function i(c,e){return r(),o("div",null,e[0]||(e[0]=[t("h1",{id:"如何保证消息的有序性",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#如何保证消息的有序性"},[t("span",null,"如何保证消息的有序性")])],-1),t("ol",null,[t("li",null,"通过轮询所有队列的方式来确定消息被发送到哪一个队列（负载均衡策略）。订单号相同的消息会被先后发送到同一个队列中，"),t("li",null,"在获取到路由信息以后，会根据算法来选择一个队列，同一个 OrderId 获取到的肯定是同一个队列。")],-1)]))}const p=a(n,[["render",i],["__file","Java-MQ6.html.vue"]]),d=JSON.parse('{"path":"/audition/mq/Java-MQ6.html","title":"如何保证消息的有序性","lang":"zh-CN","frontmatter":{"description":"如何保证消息的有序性 通过轮询所有队列的方式来确定消息被发送到哪一个队列（负载均衡策略）。订单号相同的消息会被先后发送到同一个队列中， 在获取到路由信息以后，会根据算法来选择一个队列，同一个 OrderId 获取到的肯定是同一个队列。","head":[["meta",{"property":"og:url","content":"https://www.sansei.top/audition/mq/Java-MQ6.html"}],["meta",{"property":"og:site_name","content":"川上富江"}],["meta",{"property":"og:title","content":"如何保证消息的有序性"}],["meta",{"property":"og:description","content":"如何保证消息的有序性 通过轮询所有队列的方式来确定消息被发送到哪一个队列（负载均衡策略）。订单号相同的消息会被先后发送到同一个队列中， 在获取到路由信息以后，会根据算法来选择一个队列，同一个 OrderId 获取到的肯定是同一个队列。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T15:50:06.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T15:50:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何保证消息的有序性\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-17T15:50:06.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1739807406000,"updatedTime":1739807406000,"contributors":[{"name":"cangbao","email":"yph0228@163.com","commits":1}]},"readingTime":{"minutes":0.34,"words":102},"filePathRelative":"audition/mq/Java-MQ6.md","localizedDate":"2025年2月17日","autoDesc":true}');export{p as comp,d as data};
